```bash
su - sas
mkdir -p ~/working/homegrown/
cd ~/working/
unzip gelweb.race.sas.com.zip 
find ~/working/gelweb.race.sas.com -type f  -name "index.html*" -exec rm -f {} \;
mv ~/working/gelweb.race.sas.com/mirror/gitlab/* ./homegrown/
rm -rf  ~/working/gelweb.race.sas.com
ls -al homegrown/

cd /nas
sudo mkdir -p sharedhome
sudo chmod -R 777 sharedhome
172.19.48.188 viya01.sas.spdl.com    viya01
172.19.48.189 viya02.sas.spdl.com    viya02

#uninstall OpenLDAP
cd ~/working/homegrown/OpenLDAP
ansible-playbook gel.openldapremove.yml
  
cat << 'EOF' > ./inventory.ini
viya01 ansible_host=viya01.sas.spdl.com
viya02 ansible_host=viya02.sas.spdl.com


[openldapserver]
viya01

[openldapclients]
viya01
viya02

[openldapall:children]
openldapserver
openldapclients

EOF


ansible-playbook gel.openldapsetup.yml -e "DC=sas" -e "OLCROOTPW=sas12345" -e 'anonbind=true' -e 'homedir=/nas/sharedhome' 
---
cat << 'EOF' > ./inventory.ini
viya03 ansible_host=viya03.sas.ixinwu.com


[openldapserver]
viya03

[openldapclients]
viya03

[openldapall:children]
openldapserver
openldapclients

EOF


ansible-playbook gel.openldapsetup.yml -e "DC=ixinwu" -e "OLCROOTPW=sas12345" -e 'anonbind=true' -e 'homedir=/home/'
---
sudo vi  ~/working/homegrown/OpenLDAP/sitedefault.yml

cat << 'EOF' > ./sitedefault.yml
## this file was auto-generated by the OpenLDAP Ansible playbook (https://gitlab.sas.com/canepg/OpenLDAP)
## make sure to review for accuracy.
config:
    application:
        sas.identities.providers.ldap.connection:
            host: 'eeclxvm124.unx.sas.com'
            port: '389'
            url: 'ldap://${sas.identities.providers.ldap.connection.host}:${sas.identities.providers.ldap.connection.port}'
            anonymousBind: 'true'
            userDN: 'none'
            password: 'none'
        sas.identities.providers.ldap.group:
            accountId: 'name'
            baseDN: 'dc=wuxi,dc=com'
            createdDate: 'createTimestamp'
            distinguishedName: 'none'
            member: 'member'
            modifiedDate: 'modifyTimestamp'
            objectClass: 'groupOfNames'
            objectFilter: '(objectClass=groupOfNames)'
            searchFilter: 'dn={0}'
        sas.identities.providers.ldap.user:
            accountId: 'uid'
            baseDN: 'dc=wuxi,dc=com'
            createdDate: 'createTimestamp'
            distinguishedName: 'none'
            memberOf: 'memberOf'
            modifiedDate: 'modifyTimestamp'
            objectClass: 'inetOrgPerson'
            objectFilter: '(objectClass=inetOrgPerson)'
            searchFilter: 'uid={0}'
        sas.identities:
            administrator: 'provuser01'
# In support of multi-tenancy
        sas.multi.tenancy.enabled: true
        # choose one:
        sas.multi.tenancy.db.mode: schemaPerApplicationTenant
        #sas.multi.tenancy.db.mode: databasePerTenant
        zones:
            internal.hostnames: eeclxvm124.unx.sas.com,eeclxvm125.unx.sas.com,eeclxvm126.unx.sas.com,eeclxvm127.unx.sas.com,haproxy.unx.sas.com
EOF
---
sudo cp ~/working/homegrown/OpenLDAP/sitedefault.yml /sas/sas_viya_playbook/roles/consul/files/


----	
Onboard Tenant
--
add provuser01 in the "SAS Administrator" group
--
# create a profile
cd /opt/sas/viya/home/bin
./sas-admin profile init
Enter configuration options:

Service Endpoint> https://eeclxvm124.unx.sas.com

Output type (text|json|fulljson)> json

Enable ANSI colored output (y/n)?> y
Saved 'Default' profile to /home/sas/.sas/config.json.

# test the authentication (with provuser01 and sas12345)
export SSL_CERT_FILE=/opt/sas/viya/config/etc/SASSecurityCertificateFramework/cacerts/trustedcerts.pem
./sas-admin auth login
Enter credentials for https://eeclxvm124.unx.sas.com

Userid> provuser01

Password>
Login succeeded. Token saved.

		
-----
cd /sas/sas_viya_playbook/
cat << 'EOF' > ./stark_vars.yml
# The value of the sas_tenant represents the tenant ID.
# The value is used in creating directories and services for the
# Cloud Analytic Server, SAS Compute Server, SAS Object Spawner and SAS/CONNECT.
# It is also used as the id in SAS Environment Manager. Unacceptable values are
# "viya", "spre" and anything beginning with "sas". Do not start the string with
# numerics and do not use spaces or non alpha-numeric characters in the name.

sas_tenant: stark

# If skip_ldap_config is set to true, the provider admin will need to configure
# LDAP and add the tenant admin to the tenant instance once the onboard process
# is complete.

skip_ldap_config: "false"

# The tenant admin is the owner of files and directories on disk as well as the
# process owner of the tenant-specific services. The tenant_admin_group defines
# the primary group that the tenant administrator belongs to.

tenant_admin: tony
tenant_admin_group: RegularHumans

# The tenant users group is the primary group for all non-administrator tenant users

tenant_users_group: SuperHeroes

# This is the password for the "sasprovider" user that is a tenant super user. This
# user allows a provider to log into the tenant space.

tenant_provider_pwd: sas12345

# The provider admin and password are needed to make SAS Tenant command line calls
# to create and onboard the tenant as well as add the "sasprovider" user to the
# tenant. By default "sasboot" will be used but this can be any user in the
# SASAdministrators group for the provider tenant.

provider_admin: provuser01
provider_admin_pwd: sas12345

# Set the ports that SAS/CONNECT will listen on.
# The management port is used for monitoring the health
# of the SAS/CONNECT Spawner. Typically these run on ports 17551 and 17541 respectively.

sasenv_connect_port: 17553
sasenv_connect_mgmt_port: 17554

# Set the port that the tenant-specific SAS Object Spawner will run on.
# Typically this runs on port 8591.

SPAWNER_CONFIGURATION:
  sasPort: 8593

# Anything added to the below "WORKSPACESERVER_CONFIGURATION" section will end up
# in the autoexec_deployment.sas file in the tenant-specific SAS Workspace Server,
# SAS/CONNECT Server and SAS Compute Server configuration directories. It will be
# in the format of 'options key="value"'.
#
# To use this section uncomment "WORKSPACESERVER_CONFIGURATION" and add the desired lines

#WORKSPACESERVER_CONFIGURATION:
  #1: '/* Comment about key */'
  #2: key=value;

# Anything added to the below "FOUNDATION_CONFIGURATION" section will end up
# in the sasenv_deployment file in the tenant-specific SAS Workspace Server and
# SAS/CONNECT Server configuration directories. It will be in the format
# of 'export KEY="value"'.
#
# To use this section uncomment "FOUNDATION_CONFIGURATION" and add the desired lines

#FOUNDATION_CONFIGURATION:
  #1: '# Comment about KEY'
  #2: KEY=value

# Anything added to the below "SASV9_CONFIGURATION" section will end up
# in the sasv9_deployment.cfg file in the tenant-specific SAS Workspace Server,
# SAS/CONNECT Server and SAS Compute Server configuration directories. It will be
# in the format of '-OPTION value'.
#
# To use this section uncomment "SASV9_CONFIGURATION" and add the desired lines

#SASV9_CONFIGURATION:
  #1: '/* Comment about OPTION */'
  #2: 'OPTION value'

CLUSTER_DEFINITIONS:
  cas:
    default:
      # The primary host value is the Ansible alias name from a host in the
      # sas-casserver-primary group in the inventory.ini file. There should only be
      # one entry for the primary_host. This host will be the main CAS controller
      # for the CAS grid

      primary_host: eeclxvm124

      # The secondary host value is the Ansible alias name from a host in the
      # sas-casserver-primary group in the inventory.ini file. There should only be
      # one entry for the secondary_host. This host will be the backup CAS controller
      # for the CAS grid

      secondary_host: ""

      # The worker hosts value is a comma-separated list of the Ansible alias names
      # from the sas-casserver-primary group in the inventory.ini file.
      # The listed hosts will be the workers for the CAS grid

      worker_hosts: eeclxvm126

      # The tenant that this CAS configuration belongs to.
      # *** Do not edit this value ***

      tenant: "{{ sas_tenant }}"

      # This is the user that the CAS process will run as
      # *** Do not edit this value ***

      casenv_user: "{{ tenant_admin }}"

      # This is the group that the casenv_user belongs to
      # *** Do not edit this value ***

      casenv_group: "{{ tenant_admin_group }}"

      # Anything added to the below "cas" section will be inserted into the
      # casconfig_deployment.lua file as a CAS option in the format of "cas."
      # CAS typically runs on port 5570, HTTP port 8777 and gc port 0. The port
      # and httpport will need to be changed to avoid port conflicts if other CAS
      # servers are running on the same host.

      cas:
        port: 5572
        httpport: 8779
        gcport: 0
        #SERVICESBASEURL: "https://< tenant ID >.loadbalancer.company.com"

      # Anything added to the below "env" section will be inserted into the
      # casconfig_deployment.lua file as an environment variable in the format
      # of "env."
      # To use this section, uncomment "env" and any keys below "env" that contain
      # custom values.

      #env:
        #CAS_DISK_CACHE: /tmp
        #CAS_VIRTUAL_HOST: "< tenant ID >.loadbalancer.company.com"
        #CAS_VIRTUAL_PROTO: "https"
        #CAS_VIRTUAL_PORT: 443


      # Anything added to the below "settings" section will be inserted into the
      # cas_deployment.settings file as an environment variable.

      #settings:
        #JAVA_HOME: /usr/lib/jvm/jre-1.8.0
        #ODBCHOME: /path/to/ODBC
        #ODBCINST: /path/to/ODBC/odbcinst.ini
        #ODBCINI: /path/to/ODBC/odbc.ini
        #ODBCSYSINI: /path/to/ODBC
        #001_LD_LIBRARY_PATH: '$LD_LIBRARY_PATH:$JAVA_HOME/lib/amd64/server'
        #002_LD_LIBRARY_PATH: '$LD_LIBRARY_PATH:/additional/path'
EOF

---
ansible-playbook utility/multi-tenancy.yml -e "@stark_vars.yml" -vv

ansible-playbook utility/disable-tenant.yml -e "@stark_vars.yml"

sudo rm -rf /opt/sas/stark

yum install -y jq
--
trouble shooting
The launch of server mySASObjectServer for user tony failed. Search permission is denied for a directory or file is not an executable file

usermod -a -G RegularHumans tony

cd /tmp
ll |grep tony
rm -rf 			
```
